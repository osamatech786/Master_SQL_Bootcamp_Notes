USE MissionSQL;

SELECT DB_NAME() ,CURRENT_USER , CURRENT_TIMESTAMP;

SELECT * FROM sales;

-- Variables in SQL

declare @max_price decimal(5,2) = 0
PRINT 'Initial Value of Sale Price is : '+ CAST(@max_price as VARCHAR)

SELECT @max_price = MAX(Price) FROM sales;
--PRINT @max_price
PRINT ' ' -- To print empty line
--PRINT 'Maximum Sale Price is : '+ @max_price  -- Error converting data type varchar to numeric.
PRINT 'Maximum Sale Price is : '+ CAST(@max_price AS VARCHAR)

-- SELECT MAX(Price) FROM sales

select * FROM sales;

-- IF ELSE in SQL
-- Example 1
declare @max_price decimal(5,2) = 0
SELECT @max_price = MAX(Price) FROM sales;

IF @max_price > 200
BEGIN
 print 'Wow! Max Sales for this month is : ' +CAST(@max_price AS VARCHAR)
END

--Example 2
declare @max_price decimal(5,2) = 0
SELECT @max_price = MAX(Price) FROM sales;

IF @max_price > 400
BEGIN
 print 'Wow! Max Sales for this month is : ' +CAST(@max_price AS VARCHAR)
END
ELSE
BEGIN
 print 'Oops!! Sales is not more than 400'
END

--Example 3
declare @max_price decimal(5,2)
SELECT @max_price = MAX(Price) FROM sales;
declare @mrp decimal(5,2)
SET @mrp = 300

IF @max_price > @mrp
BEGIN
 print 'Alert! Item sold at price more than MRP' +CAST(@max_price AS VARCHAR)
END
ELSE
BEGIN
 print 'Sale Price is less than MRP'
END

select * from sales;

CREATE TABLE Student_Scores(Student_ID INT PRIMARY KEY IDENTITY(1,1),
                            Student_Name VARCHAR(100),
							Score DECIMAL(5,2))

INSERT INTO Student_Scores (Student_Name, Score) VALUES
('Sourabh',90),
('Deepak',80),
('Ram',90),
('Shyam',50),
('Anil',60)

SELECT * FROM Student_Scores


--CASE WHEN
-- To get Grades using CASE WHEN 
-- 90-100 --> A
-- 70-89 --> B
-- 60-69 --> C
-- 50-59 -- > D
-- else --> E


SELECT Student_Name, 
CASE 
 WHEN Score <=100 AND Score >=90 THEN 'A' 
 WHEN Score <=89 AND Score >=70 THEN 'B'
 WHEN Score <=69 AND Score >=60 THEN 'C'
 WHEN Score <=59 AND Score >=50 THEN 'D'
ELSE 'E'
END 'Grade'
FROM Student_Scores

-- Using BETWEEN , AND
SELECT Student_Name, 
CASE 
	WHEN Score BETWEEN 90 AND 100 THEN 'A' 
	WHEN Score BETWEEN 70 AND 89 THEN 'B'
	WHEN Score BETWEEN 60 AND 69 THEN 'C'
	WHEN Score BETWEEN 50 AND 59 THEN 'D'
	ELSE 'E'
END AS 'Grade'
FROM Student_Scores

-- Scenario for Online Form

StudentId --> ________
Name --> _________
Mobile --> ________
Address --> ________
X_Marks --> _______
XII_Marks --> ______

Student_Basic_Details
=====================
Student_ID --> PK 
Student_Name
Mobile
Address

Student_Qualification
====================
Student_ID --> FK
Qualification_ID --> PK
X_Marks
XII_Marks

CREATE TABLE Student_Basic_Details(Student_ID INT PRIMARY KEY IDENTITY(1,1),
                                   Student_Name VARCHAR(50),
								   Mobile VARCHAR(10),
								   Address VARCHAR(50));
CREATE TABLE Student_Qualifications(Qualifiation_ID INT PRIMARY KEY IDENTITY(1,1),
                                   X_Marks INT,
								   XII_Marks INT,
                                   Student_ID INT FOREIGN KEY REFERENCES 
								   Student_Basic_Details(Student_ID))
drop table Student_Basic_Details
drop table Student_Qualifications

SELECT * FROM Student_Basic_Details;
SELECT * FROM Student_Qualifications;

INSERT INTO Student_Basic_Details 
(Student_Name, Mobile, Address) VALUES ('Sourabh','9687937748','XYZ')
DECLARE @Student_ID INT = @@IDENTITY
INSERT INTO Student_Qualifications 
(X_Marks, XII_Marks,Student_ID) VALUES (90,90,@Student_ID)

SELECT * FROM Student_Basic_Details;
SELECT * FROM Student_Qualifications;

SELECT SB.Student_Name, SQ.X_Marks, SQ.XII_Marks FROM Student_Basic_Details SB
INNER JOIN Student_Qualifications SQ
ON SB.Student_ID = SQ.Student_ID


